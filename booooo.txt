public class Pair<T, U> {
    private final T first;
    private final U second;

    public Pair(T first, U second) {
        this.first = first;
        this.second = second;
    }

    public T getFirst() {
        return first;
    }

    public U getSecond() {
        return second;
    }

    public Pair<U, T> reverse() {
        return new Pair<>(second, first);
    }

    @Override
    public String toString() {
        return "Pair{" +
                "first=" + first +
                ", second=" + second +
                '}';
    }

    public static void main(String[] args) {
        Pair<String, Integer> originalPair = new Pair<>("Hello", 123);
        System.out.println("Original Pair: " + originalPair);

        Pair<Integer, String> reversedPair = originalPair.reverse();
        System.out.println("Reversed Pair: " + reversedPair);
    }
}


 




public class GenericSwap {

    public static <T> void swap(T[] array, int index1, int index2) {
        if (index1 < 0 || index1 >= array.length || index2 < 0 || index2 >= array.length) {
            throw new IndexOutOfBoundsException("Invalid index");
        }
        
        T temp = array[index1];
        array[index1] = array[index2];
        array[index2] = temp;
    }

    public static void main(String[] args) {
        // Example with Integer array
        Integer[] intArray = {1, 2, 3, 4, 5};
        System.out.println("Before swap: " + java.util.Arrays.toString(intArray));
        swap(intArray, 1, 3);
        System.out.println("After swap: " + java.util.Arrays.toString(intArray));

        // Example with String array
        String[] strArray = {"A", "B", "C", "D", "E"};
        System.out.println("Before swap: " + java.util.Arrays.toString(strArray));
        swap(strArray, 0, 4);
        System.out.println("After swap: " + java.util.Arrays.toString(strArray));

        // Example with Double array
        Double[] dblArray = {1.1, 2.2, 3.3, 4.4, 5.5};
        System.out.println("Before swap: " + java.util.Arrays.toString(dblArray));
        swap(dblArray, 2, 4);
        System.out.println("After swap: " + java.util.Arrays.toString(dblArray));
    }
}
